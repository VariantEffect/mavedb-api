"""controlled keyword modification

Revision ID: 0b29eefbe1dd
Revises: 2b7a977e7e98
Create Date: 2025-08-07 15:45:43.241567

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "0b29eefbe1dd"
down_revision = "2b7a977e7e98"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Rename existing columns
    op.alter_column(
        "controlled_keywords", "value", new_column_name="label", existing_type=sa.String(), existing_nullable=False
    )
    op.alter_column(
        "controlled_keywords", "vocabulary", new_column_name="system", existing_type=sa.String(), existing_nullable=True
    )
    # Add new columns
    op.add_column("controlled_keywords", sa.Column("code", sa.String(), nullable=True))
    op.add_column("controlled_keywords", sa.Column("version", sa.String(), nullable=True))
    # Drop and recreate the correct unique constraint
    op.drop_constraint("ix_controlled_keywords_key_value", "controlled_keywords", type_="unique")
    op.create_unique_constraint("ix_controlled_keywords_key_label", "controlled_keywords", ["key", "label"])
    # ### end Alembic commands ###

    # TODO: Will modify this part when we get the final GO terms.
    op.execute(
        """INSERT INTO controlled_keywords (key, label, system, code, version, special, description, creation_date, modification_date) VALUES ('Phenotypic Assay Mechanism', 'Other', NULL, NULL, NULL, False, 'The Gene Ontology (GO) is a structured, standardized representation of biological knowledge.', NOW(), NOW())"""
    )


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "controlled_keywords", "label", new_column_name="value", existing_type=sa.String(), existing_nullable=False
    )
    op.alter_column(
        "controlled_keywords", "system", new_column_name="vocabulary", existing_type=sa.String(), existing_nullable=True
    )
    op.drop_constraint("ix_controlled_keywords_key_label", "controlled_keywords", type_="unique")
    op.create_unique_constraint("ix_controlled_keywords_key_value", "controlled_keywords", ["key", "value"])
    op.drop_column("controlled_keywords", "version")
    op.drop_column("controlled_keywords", "code")
    # ### end Alembic commands ###
