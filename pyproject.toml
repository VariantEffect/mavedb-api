[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "mavedb"
version = "2024.4.3"
description = "API for MaveDB, the database of Multiplexed Assays of Variant Effect."
license = "AGPL-3.0-only"
readme = "README.md"
authors = []
homepage = "https://mavedb.org"
repository = "https://github.com/VariantEffect/mavedb-api"
documentation = "https://mavedb.org/docs/mavedb/"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]

[tool.poetry.dependencies]
python = "^3.9"

fqfa = "~1.3.0"
pyhumps = "~3.8.0"
pyyaml = "~6.0.1"
IDUtils = "~1.2.0"
mavehgvs = "~0.6.0"
eutils = "~0.6.0"
email_validator = "~2.1.1"
numpy = "~1.26"
httpx = "~0.26.0"
pandas = "~1.4.1"
pydantic = "~1.10"
python-dotenv = "~0.20.0"
python-json-logger = "~2.0.7"
SQLAlchemy = "~2.0.0"

# Optional dependencies for running this application as a server
alembic = { version = "~1.7.6", optional = true }
arq = { version = "~0.25.0", optional = true }
authlib = { version = "~1.3.1", optional = true }
boto3 = { version = "~1.34.97", optional = true }
biocommons = { version = "~0.0.0", optional = true }
cryptography = { version = "~43.0.1", optional = true }
cdot = { version = "~0.2.21", optional = true }
fastapi = { version = "~0.95.0", optional = true }
hgvs = { version = "~1.5.4", optional = true }
orcid = { version = "~1.0.3", optional = true }
psycopg2 = { version = "~2.9.3", optional = true }
python-jose = { extras = ["cryptography"], version = "~3.3.0", optional = true }
python-multipart = { version = "~0.0.5", optional = true }
requests = { version = "~2.32.0", optional = true }
starlette = { version = "~0.27.0", optional = true }
starlette-context = { version = "^0.3.6", optional = true }
slack-sdk = { version = "~3.21.3", optional = true }
uvicorn = { extras = ["standard"], version = "*", optional = true }
watchtower = { version = "~3.2.0", optional = true }

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
boto3-stubs = "~1.34.97"
mypy = "~1.10.0"
pre-commit = "*"
jsonschema = "*"
fakeredis = "~2.21.1"
pytest = "~7.2.0"
pytest-cov = "~5.0.0"
pytest-postgresql = "~5.0.0"
pytest-asyncio = "~0.23.5"
pytest-socket = "~0.6.0"
pandas-stubs = "~2.1.4"
types-requests = "~2.31.0"
types-python-jose = "~3.3.4"
types-PyYAML = "~6.0.12.20240808"
redis = "~5.0.2"
requests-mock = "~1.11.0"
ruff = "^0.6.8"
SQLAlchemy = { extras = ["mypy"], version = "~2.0.0" }


[tool.poetry.extras]
server = ["alembic", "arq", "authlib", "biocommons", "boto3", "cdot", "cryptography", "fastapi", "hgvs", "orcid", "psycopg2", "python-jose", "python-multipart", "requests", "starlette", "starlette-context", "slack-sdk", "uvicorn", "watchtower"]


[tool.mypy]
plugins = [
    "sqlalchemy.ext.mypy.plugin",
    "numpy.typing.mypy_plugin",
]
mypy_path = "mypy_stubs"

[tool.pytest.ini_options]
addopts = "-v -rP --import-mode=importlib --disable-socket --allow-hosts localhost,::1,127.0.0.1"
asyncio_mode = 'strict'
testpaths = "tests/"
pythonpath = "."
norecursedirs = "tests/helpers/"
# Uncomment the following lines to include application log output in Pytest logs.
# log_cli = true
# log_cli_level = "DEBUG"

[tool.ruff]
# target python 3.9 and above
target-version = "py39"

# max line length for linting is 120 characters
line-length = 120

# Exclude these files from linting/formatting
exclude = ["alembic/manual_migrations"]
